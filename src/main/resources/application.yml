server:
 port: 9000
 contextPath:

# use this as the security key for encryption
security:
 user:
  password: 81d56928-891a-41b2-8dd2-132593e6d057

spring:
 template:
  cache: false
 http:
  multipart:
   maxFileSize: 20MB
   maxRequestSize: 20MB
 # H2
 # database url and language
 datasource:
  username: sage
  password: sage
  platform: h2
  url: jdbc:h2:mem:AZ;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
  driverClassName: org.h2.Driver
  # common database config -- might be needed for postgres
  defaultAutoCommit: false
  test-on-borrow: true
  validation-query: select version();
  # datasource initial imports
  data: classpath:/import.sql
 jpa:
  database-platform: org.hibernate.dialect.H2Dialect
  generate-ddl: true
  show-sql: false
  hibernate:
   ddl-auto: create-drop
  properties:
   hibernate:
    event:
     merge:
      entity_copy_observer: allow
 thymeleaf:
  cache: false
  model: LEGACYHTML5

# File size limit
multipart:
 maxFileSize: 100Mb
 # Total request size for a multipart/form-data
 maxRequestSize: 1000Mb

# logging
logging:
 level:
  edu:
   tamu: INFO
  org:
   hibernate: INFO
   springframework: INFO
   springframework.jndi: INFO
   springframework.orm.jpa: INFO
  ro.isdc.wro: INFO
  file: sage.log
  path: /var/log
  # Logging pattern for the console
  # pattern:
  #  console: %d{yyyy-MM-dd HH:mm:ss} %highlight(%-5level) %cyan(%logger{15}) - %msg %n
  #  # Logging pattern for file
  #  file: %d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# PostgreSQL
#spring.datasource.platform: postgresql
#spring.datasource.url: jdbc:postgresql://localhost:5432/sage
#spring.datasource.driverClassName: org.postgresql.Driver
#spring.jpa.database-platform: org.hibernate.dialect.PostgreSQLDialect

# MySQL
#spring.datasource.platform: mysql
#spring.datasource.url: jdbc:mysql://localhost/sage
#spring.datasource.driverClassName: com.mysql.jdbc.Driver
#spring.jpa.database-platform: org.hibernate.dialect.MySQL5InnoDBDialect

# spring.profiles: production, development, test, mock-token-provider
# spring.profiles.active: development

info:
 build:
  production: @production@
  artifact: @project.artifactId@
  name: @project.name@
  description: @project.description@
  version: @project.version@

app:
 # edu.tamu.weaver.email.config.WeaverEmailConfig
 email:
  host: relay.tamu.edu
  from: noreply@library.tamu.edu
  replyTo: dev@library.tamu.edu
 url: http://localhost:${server.port}
 cvcache:
  duration: 3600000
 ui:
  path: /app
 # edu.tamu.weaver.auth.service.UserCredentialsService
 authority.admins:
 security.secret: verysecretsecret
 security.allow-access: http://localhost:${server.port}
 assume.enabled: false
 assume.claims-url:
 # edu.tamu.weaver.reporting.controller.ReportingController
 reporting.address: dev@tdl.org
 # edu.tamu.weaver.utility.HttpUtility
 http.timeout: 10000
 # edu.tamu.weaver.validation.controller.ValidationsController
 model.packages: edu.tamu.sage.model

# options: weaverAuth,emailRegistration
authenticationStrategies: emailRegistration

# shib.keys: netid,uin,lastName,firstName,email
# shib.subject: email
# shib.netid: edupersonprincipalnameunscoped
# shib.uin: tamuuin
# shib.lastName: tdl-sn
# shib.firstName: tdl-givenname
# shib.email: tdl-mail

auth:
 path: /auth
 security:
  jwt:
   secret: verysecretsecret
   issuer: localhost
   duration: 1

wro:
 managerFactoryClassName: edu.tamu.cap.wro.manager.factory.ConfigurableWroManagerFactory
 # Define which preProcessors should be used to process SASS
 preProcessors: lessCssImport
 # Define which postProcessors should be used to process SASS
 postProcessors: rubySassCss

# edu.tamu.weaver.wro.service.ThemeManagerService
theme:
 manager: false
 # Define the locations of SASS files to be processed
 default.css: sass/app.scss
 # Define the location of default themes config file, if used
 default.location: config/theme-defaults.json
