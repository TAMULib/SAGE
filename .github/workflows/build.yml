name: Build

on: [ push, pull_request, workflow_dispatch ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v3
        with:
          path: repo

      - name: "Checkout Weaver-UI-Core"
        uses: actions/checkout@v3
        with:
          repository: TAMULib/Weaver-UI-Core
          path: weaver-ui
          ref: 2.x

      - name: "Run Weaver-UI-Core Docker Compose Registry Image"
        run: docker-compose -f $GITHUB_WORKSPACE/weaver-ui/docker-compose.yml up -d registry

      - name: "Publish Weaver-UI-Core (@wvr/core)"
        run: |
          cd $GITHUB_WORKSPACE/weaver-ui
          npm run publish:local

      - name: "Node Cache"
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-cache-node-${{ hashFiles('**/package.json') }}

      - name: "Node Modules Cache"
        uses: actions/cache@v3
        with:
          path: $GITHUB_WORKSPACE/repo/node_modules
          key: ${{ runner.os }}-cache-node_modules-${{ hashFiles('**/package.json') }}

      - name: "Setup Node"
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: "Setup Java"
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'
          cache: 'maven'

      - name: "Maven Test"
        env:
          NPM_CONFIG_REGISTRY: http://localhost:4873
        run: |
          cd $GITHUB_WORKSPACE/repo
          mvn clean test jacoco:report coveralls:report -DdryRun=true -DtestClient

      - name: "Combine Coverage"
        run: |
          cd $GITHUB_WORKSPACE/repo
          cat coverage/lcov.info | node node_modules/coveralls/bin/coveralls.js -s > coverage/coveralls.json
          jq 'reduce inputs as $i (.; .source_files += $i.source_files)' target/coveralls.json coverage/coveralls.json > coveralls.json

      - name: "Coverage Report"
        uses: MikeEdgar/github-action@raw_coverage_file
        with:
          github-token: ${{ secrets.github_token }}
          path-to-file: 'repo/coveralls.json'
          coverage-format: raw

      - name: "Lighthouse Report"
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        run: |
          cd $GITHUB_WORKSPACE/repo
          xvfb-run --auto-servernum npm run test:audit

      - name: "Deploy GH-Pages"
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          github_token: ${{ secrets.github_token }}
          branch: gh-pages
          folder: repo/target/gh-pages
          clean: true
          single_commit: true

  ## Set up Github Advanced Security ##
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"
  ## Set up API Testing ##
      - name: Audit OpenAPI files
        uses: actions/checkout@v2
      - name: Audit OpenAPI files
        uses: 42Crunch/api-security-audit-action@v2
        with:
          # Please create free account at https://platform.42crunch.com/register
          # Follow these steps to configure API_TOKEN https://docs.42crunch.com/latest/content/tasks/integrate_github_actions.htm
          api-token: ${{ secrets.API_TOKEN }}
          min-score: 85
  ## Docker Images ##
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: "{{defaultContext}}:mysubdir"
          push: true
          tags: user/app:latest
          secrets: |
            GIT_AUTH_TOKEN=${{ secrets.MYTOKEN }}
