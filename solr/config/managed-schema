<?xml version="1.0" encoding="UTF-8"?>
<schema name="SAGE" version="1.5">
  <!-- NOTE: various comments and unused configuration possibilities have been purged
     from this file.  Please refer to http://wiki.apache.org/solr/SchemaXml,
     as well as the default schema file included with Solr -->

  <uniqueKey>id</uniqueKey>

  <fields>
    <field name="id" type="string" indexed="true" stored="true" required="true" multiValued="false" />
    <!-- docValues are enabled by default for long type so we don't need to index the version field  -->
    <field name="_version_" type="long" indexed="true" stored="true"/>
    <field name="_root_" type="string" indexed="true" stored="false" docValues="false" />
    <field name="_text_" type="text" indexed="true" stored="false" multiValued="true"/>
    <field name="timestamp" type="date" indexed="true" stored="true" default="NOW" multiValued="false"/>

    <!-- Internal -->
    <field name="collection" type="string" indexed="true" stored="true" required="true" multiValued="true"/>
    <field name="thumbnail" type="string" indexed="true" stored="true" multiValued="false"/>
    <field name="resource" type="string" indexed="true" stored="true" multiValued="false"/>
    <field name="manifest" type="string" indexed="true" stored="true" multiValued="false"/>
    <field name="application_type" type="whole_string" indexed="true" stored="true" multiValued="false"/>
    <field name="supplementary_resources" type="whole_string" indexed="true" stored="true" multiValued="true"/>

    <!-- Mandatory (M) -->
    <field name="title" type="sorting_string" indexed="true" stored="true" multiValued="false"/>
    <field name="content_type" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="digital_publisher" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="rights_access" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="reformatting" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="filename" type="sorting_string" indexed="true" stored="true" multiValued="false"/>

    <!-- Mandatory if applicable and available (MA) -->
    <field name="subject" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="creator" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="date_published" type="date" indexed="true" stored="true" multiValued="false"/>
    <field name="date_created" type="whole_string" indexed="true" stored="true" multiValued="false"/>
    <field name="date_created_string" type="string" indexed="true" stored="true"/>
    <field name="summary_abstract" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="summary_abstract_multi" type="string" indexed="true" stored="true" multiValued="true"/>
    <field name="language" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="institution_department" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="standard_digital_identifier" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="local_digital_identifier" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="edition_revision_information" type="string" indexed="true" stored="true" multiValued="true"/>

    <!-- Non-core Recommended -->
    <field name="alternative_title" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="genre" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="table_of_contents" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="contributor" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="related_resource" type="string" indexed="true" stored="true" multiValued="true"/>
    <field name="relation" type="tdate" multiValued="true" indexed="true" stored="true"/>
    <field name="original_publisher" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="physical_extent" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="sponsor" type="whole_string" indexed="true" stored="true" multiValued="true"/>

    <!-- Non-core Optional -->
    <field name="source_collection" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="original_resource" type="string" indexed="true" stored="true" multiValued="true"/>
    <field name="notes" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="origin" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="audience_level" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="classification" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="physical_item_identifier" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="physical_item_location" type="whole_string" indexed="true" stored="true" multiValued="true"/>
    <field name="details" type="text_en" indexed="true" stored="true"/>
    <field name="medium" type="string" indexed="true" stored="true" multiValued="true"/>
    <field name="spatial" type="whole_string" indexed="true" stored="true"/>
    <field name="spatial_multi" type="whole_string" indexed="true" stored="true" multiValued="true"/>





    <!-- This can be enabled, in case the client does not know what fields may be searched. It isn't enabled by default
         because it's very expensive to index everything twice. -->
    <!-- <copyField source="*" dest="_text_"/> -->

    <!-- Dynamic field definitions allow using convention over configuration
       for fields via the specification of patterns to match field names.
       EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
       RESTRICTION: the glob-like pattern in the name attribute must have a "*" only at the start or the end.  -->

  </fields>

  <!-- Above, multiple source fields are copied to the [text] field.
      Another way to map multiple source fields to the same
      destination field is to use the dynamic field syntax.
      copyField also supports a maxChars to copy setting.  -->

  <copyField source="title" dest="_text_"/>
  <copyField source="digital_publisher" dest="_text_"/>
  <copyField source="subject" dest="_text_"/>
  <copyField source="creator" dest="_text_"/>
  <copyField source="summary_abstract" dest="_text_"/>
  <copyField source="institution_department" dest="_text_"/>
  <copyField source="edition_revision_information" dest="_text_"/>
  <copyField source="alternative_title" dest="_text_"/>
  <copyField source="genre" dest="_text_"/>
  <copyField source="contributor" dest="_text_"/>
  <copyField source="original_publisher" dest="_text_"/>
  <copyField source="sponsor" dest="_text_"/>
  <copyField source="notes" dest="_text_"/>
  <copyField source="classification" dest="_text_"/>
  <copyField source="title" dest="title_txt_en_split"/>
  <copyField source="summary_abstract" dest="summary_abstract_txt_en_split"/>
  <copyField source="notes" dest="notes_txt_en_split"/>
  <copyField source="summary_abstract_txt_en_split_multi" dest="*_txt_en_split_multi"/>
  <copyField source="*_multi" dest="*_txt_en_split_multi"/>
  <types>

    <!-- sorting string type  -->
    <fieldType name="sorting_string" class="solr.TextField" omitNorms="true" sortMissingLast="true">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory" />
      </analyzer>
    </fieldType>

    <!--
      An alternative to string type that is utilizes a lower case filter.
      The solr.StrField does not allow this.
      Base types like solr.StrField have omitNorms="true" by default.
      This sets omitNorms="true" to more closely match the solr.StrField type.
      The docValues="true" from solrStrField cannot be preserved because solr.TextField does not support it.
    -->
    <fieldType name="whole_string" class="solr.TextField" omitNorms="true" sortMissingLast="true">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>
    <fieldType name="whole_strings" class="solr.TextField" omitNorms="true" sortMissingLast="true" multiValued="true">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>

    <fieldType name="string" class="solr.StrField" sortMissingLast="true" />
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
    <fieldType name="rand" class="solr.RandomSortField" omitNorms="true"/>

    <!-- Default numeric field types.  -->
    <fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" positionIncrementGap="0"/>

    <!-- trie numeric field types for faster range queries -->
    <fieldType name="tint" class="solr.TrieIntField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" positionIncrementGap="0"/>

    <!-- The format for this date field is of the form 1995-12-31T23:59:59Z
         Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
      -->
    <fieldType name="date" class="solr.TrieDateField" precisionStep="0" positionIncrementGap="0"/>
    <!-- A Trie based date field for faster date range queries and date faceting. -->
    <fieldType name="tdate" class="solr.TrieDateField" precisionStep="6" positionIncrementGap="0"/>


    <!-- This point type indexes the coordinates as separate fields (subFields)
      If subFieldType is defined, it references a type, and a dynamic field
      definition is created matching *___<typename>.  Alternately, if
      subFieldSuffix is defined, that is used to create the subFields.
      Example: if subFieldType="double", then the coordinates would be
        indexed in fields myloc_0___double,myloc_1___double.
      Example: if subFieldSuffix="_d" then the coordinates would be indexed
        in fields myloc_0_d,myloc_1_d
      The subFields are an implementation detail of the fieldType, and end
      users normally should not need to know about them.
     -->
    <fieldType name="point" class="solr.PointType" dimension="2" subFieldSuffix="_d"/>

    <!-- A specialized field for geospatial search. If indexed, this fieldType must not be multivalued. -->
    <fieldType name="location" class="solr.LatLonType" subFieldSuffix="_coordinate"/>

    <!-- An alternative geospatial field type new to Solr 4.  It supports multiValued and polygon shapes.
      For more information about this and other Spatial fields new to Solr 4, see:
      http://wiki.apache.org/solr/SolrAdaptersForLuceneSpatial4
    -->
    <fieldType name="location_rpt" class="solr.SpatialRecursivePrefixTreeFieldType"
      geo="true" distErrPct="0.025" maxDistErr="0.000009" distanceUnits="degrees" />

    <fieldType name="text" class="solr.TextField" omitNorms="false">
      <analyzer>
        <tokenizer class="solr.ICUTokenizerFactory"/>
        <filter class="solr.ICUFoldingFilterFactory"/>  <!-- NFKC, case folding, diacritics removed -->
        <filter class="solr.TrimFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- A text field that only splits on whitespace for exact matching of words -->
    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.TrimFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- single token analyzed text, for sorting.  Punctuation is significant. -->
    <fieldtype name="alphaSort" class="solr.TextField" sortMissingLast="true" omitNorms="true">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory" />
        <filter class="solr.ICUFoldingFilterFactory"/>
        <filter class="solr.TrimFilterFactory" />
      </analyzer>
    </fieldtype>

    <!-- A text field with defaults appropriate for English -->
    <fieldType name="text_en" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.ICUTokenizerFactory"/>
        <filter class="solr.ICUFoldingFilterFactory"/>  <!-- NFKC, case folding, diacritics removed -->
        <filter class="solr.EnglishPossessiveFilterFactory"/>
        <!-- EnglishMinimalStemFilterFactory is less aggressive than PorterStemFilterFactory: -->
        <filter class="solr.EnglishMinimalStemFilterFactory"/>
        <!--
        <filter class="solr.PorterStemFilterFactory"/>
        -->
        <filter class="solr.TrimFilterFactory"/>
      </analyzer>
    </fieldType>

    <!-- A text field with defaults appropriate for English an NGrams -->
    <fieldType name="text_en_ng" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.ICUTokenizerFactory"/>
        <filter class="solr.ICUFoldingFilterFactory"/>  <!-- NFKC, case folding, diacritics removed -->
        <filter class="solr.EnglishPossessiveFilterFactory"/>
        <!-- EnglishMinimalStemFilterFactory is less aggressive than PorterStemFilterFactory: -->
        <filter class="solr.EnglishMinimalStemFilterFactory"/>
        <filter class="solr.TrimFilterFactory"/>
        <filter class="solr.EdgeNGramFilterFactory" minGramSize="3" maxGramSize="15" />
      </analyzer>

      <analyzer type="index">
        <tokenizer class="solr.ICUTokenizerFactory"/>
        <filter class="solr.ICUFoldingFilterFactory"/>  <!-- NFKC, case folding, diacritics removed -->
        <filter class="solr.EnglishPossessiveFilterFactory"/>
        <!-- EnglishMinimalStemFilterFactory is less aggressive than PorterStemFilterFactory: -->
        <filter class="solr.EnglishMinimalStemFilterFactory"/>
        <filter class="solr.TrimFilterFactory"/>
      </analyzer>
    </fieldType>

    <fieldType name="pid_text" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
      </analyzer>
    </fieldType>

    <!-- queries for paths match documents at that path, or in descendent paths -->
    <fieldType name="descendent_path" class="solr.TextField">
      <analyzer type="index">
        <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/" />
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.KeywordTokenizerFactory" />
      </analyzer>
    </fieldType>

    <!-- queries for paths match documents at that path, or in ancestor paths -->
    <fieldType name="ancestor_path" class="solr.TextField">
      <analyzer type="index">
        <tokenizer class="solr.KeywordTokenizerFactory" />
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.PathHierarchyTokenizerFactory" delimiter="/" />
      </analyzer>
    </fieldType>

  </types>

  <dynamicField name="*_txt_en_split" type="text_en_splitting"  indexed="true"  stored="true"/>
  <fieldType name="text_en_splitting" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">
    <analyzer type="index">
      <tokenizer class="solr.WhitespaceTokenizerFactory"/>
      <!-- in this example, we will only use synonyms at query time
      <filter class="solr.SynonymGraphFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
      -->
      <!-- Case insensitive stop word removal. -->
      <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
      <!--<filter class="solr.WordDelimiterGraphFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCase    Change="1"/>-->
      <filter class="solr.LowerCaseFilterFactory"/>
      <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
      <filter class="solr.PorterStemFilterFactory"/>
      <filter class="solr.FlattenGraphFilterFactory" />
    </analyzer>
    <analyzer type="query">
      <tokenizer class="solr.WhitespaceTokenizerFactory"/>
      <filter class="solr.SynonymGraphFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
      <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
      <!--<filter class="solr.WordDelimiterGraphFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCase    Change="1"/>-->
      <filter class="solr.LowerCaseFilterFactory"/>
      <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
      <filter class="solr.PorterStemFilterFactory"/>
    </analyzer>
  </fieldType>

  <dynamicField name="*_txt_en_split_multi" type="text_en_splitting"  indexed="true"  stored="true" multiValued="true"/>
  <fieldType name="text_en_splitting_multi" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">
    <analyzer type="index">
      <tokenizer class="solr.WhitespaceTokenizerFactory"/>
      <!-- in this example, we will only use synonyms at query time
      <filter class="solr.SynonymGraphFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
      -->
      <!-- Case insensitive stop word removal. -->
      <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
      <!--<filter class="solr.WordDelimiterGraphFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCase    Change="1"/>-->
      <filter class="solr.LowerCaseFilterFactory"/>
      <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
      <filter class="solr.PorterStemFilterFactory"/>
      <filter class="solr.FlattenGraphFilterFactory" />
    </analyzer>
    <analyzer type="query">
      <tokenizer class="solr.WhitespaceTokenizerFactory"/>
      <filter class="solr.SynonymGraphFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
      <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
      <!--<filter class="solr.WordDelimiterGraphFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCase    Change="1"/>-->
      <filter class="solr.LowerCaseFilterFactory"/>
      <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
      <filter class="solr.PorterStemFilterFactory"/>
    </analyzer>
  </fieldType>

</schema>
